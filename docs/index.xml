<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SAP on Microsoft - Tutorials</title>
    <link>https://abicas.github.io/SapOnMicrosoftDemos/</link>
    <description>Recent content on SAP on Microsoft - Tutorials</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Mon, 14 Mar 2022 14:22:13 -0300</lastBuildDate><atom:link href="https://abicas.github.io/SapOnMicrosoftDemos/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Setting up Azure Monitor for SAP</title>
      <link>https://abicas.github.io/SapOnMicrosoftDemos/labs/inframgmt/monitoring/step1/</link>
      <pubDate>Mon, 14 Mar 2022 14:22:13 -0300</pubDate>
      
      <guid>https://abicas.github.io/SapOnMicrosoftDemos/labs/inframgmt/monitoring/step1/</guid>
      <description>In order to have SAP monitoring, we need to spin up an instance of Azure Monitoring.
This section will show the steps required for that to be accomplished:
 Log on to the Azure Portal and look for Azure Monitor for SAP  Create a new instance and provide the required information. Select the same region, vNet and subnet as SAP was deployed:   Region: East US vNET: SAPCALDefault-eastus Subnet: default   Do not worry about defining providers at this moment.</description>
    </item>
    
    <item>
      <title>Creating our Chatbot</title>
      <link>https://abicas.github.io/SapOnMicrosoftDemos/labs/autoint/virtualagents/step1/</link>
      <pubDate>Thu, 10 Mar 2022 17:25:38 -0300</pubDate>
      
      <guid>https://abicas.github.io/SapOnMicrosoftDemos/labs/autoint/virtualagents/step1/</guid>
      <description>In this section we will create our Chatbot on Microsoft Power Platform.
Go to Office 365, authenticate and select Power Apps. On Power Apps, expand Chatbots, select Create and click on the Basic conversational bot button. Fill the information to create the bot:
 Name: SAP Bot Language: Deisred language (examples in Brazilian Portuguese with translation) Environment: US   Once the bot is created, go to Topics and click on New Topic Let&amp;rsquo;s rename the newly created topic from Untitled to PO Details (en-US) / Detalhes do Pedido (pt-BR) The bot needs know which phrases trigger this topic, so we will add some examples of questions users may pose to accomplish what they need:</description>
    </item>
    
    <item>
      <title>Create a Logic App</title>
      <link>https://abicas.github.io/SapOnMicrosoftDemos/labs/autoint/logicapps/step1/</link>
      <pubDate>Thu, 10 Mar 2022 14:52:21 -0300</pubDate>
      
      <guid>https://abicas.github.io/SapOnMicrosoftDemos/labs/autoint/logicapps/step1/</guid>
      <description>In this step we will create a Logic App on Azure Portal.
 Go to Logic Apps Click on Add Fill the required parameters as the picture below  Subscription and Resource Group Name: SAPDemo Region: East US (same one used on the previous steps) Plan type: Consumption     </description>
    </item>
    
    <item>
      <title>Remote Desktop Setup</title>
      <link>https://abicas.github.io/SapOnMicrosoftDemos/env_setup/datagwsetup/step1/</link>
      <pubDate>Wed, 09 Mar 2022 11:22:24 -0300</pubDate>
      
      <guid>https://abicas.github.io/SapOnMicrosoftDemos/env_setup/datagwsetup/step1/</guid>
      <description>In this section we will install the required components for Azure and Microsoft be able to connect to your SAP environment.
This section is a summary of the guide Install data gateway and Connect to SAP systems.
Connect to the Remote Desktop as on the previous step and using a browser on the Bastion Host, download 3 pieces of software (links might have changed, please check above guides for the most up-to-date links):</description>
    </item>
    
    <item>
      <title>HANA Provider</title>
      <link>https://abicas.github.io/SapOnMicrosoftDemos/labs/inframgmt/monitoring/step2/</link>
      <pubDate>Mon, 14 Mar 2022 14:22:13 -0300</pubDate>
      
      <guid>https://abicas.github.io/SapOnMicrosoftDemos/labs/inframgmt/monitoring/step2/</guid>
      <description>Let&amp;rsquo;s add a HANA Provider to collect metrics for us:
 On the Azure Monitor for SAP, go to Providers  Click Add  Let&amp;rsquo;s fill the required data:   Type: SAP HANA IP Address: SAP HANA Private IP Address Database tenant: SYSTEMDB SQL Port: 30215 Username: SAPHANADB Password: Password defined during deploy of SAP CAL   Wait for the Provider to be created and the data validated.  It takes about 10-15 minutes for information to be initially available on Azure Monitor.</description>
    </item>
    
    <item>
      <title>Linux Provider</title>
      <link>https://abicas.github.io/SapOnMicrosoftDemos/labs/inframgmt/monitoring/step3/</link>
      <pubDate>Mon, 14 Mar 2022 14:22:13 -0300</pubDate>
      
      <guid>https://abicas.github.io/SapOnMicrosoftDemos/labs/inframgmt/monitoring/step3/</guid>
      <description>Let&amp;rsquo;s add a HANA Provider to collect metrics for us:
Node Exporter Agent Before we start, we need to add an agent to the monitored VM.
 Go to the Azure Portal and open a Cloud Shell. In the examples we used BASH as the interpreter.  Now we will upload the key that SAP CAL generated on the deployment so we can log on to the Linux OS. Click on the File Transfer icon and then Upload  Select the key which will be a *.</description>
    </item>
    
    <item>
      <title>Testing our Chatbot</title>
      <link>https://abicas.github.io/SapOnMicrosoftDemos/labs/autoint/virtualagents/step2/</link>
      <pubDate>Thu, 10 Mar 2022 17:25:38 -0300</pubDate>
      
      <guid>https://abicas.github.io/SapOnMicrosoftDemos/labs/autoint/virtualagents/step2/</guid>
      <description>In this section we will test and debug our Chatbot on Microsoft Power Platform.
On the left side of the screen go to the Test bot and simulate a user conversation.
 IMPORTANT:  SAP expects a 10 char stirng with leading zeroes, so if you want to check order 728 you need to type 0000000728 Once we are doing a lab, we are not treating the input so type just the PO number with no other information, leading/trailing spaces, words, once we are passing the whole input to SAP.</description>
    </item>
    
    <item>
      <title>Create a Workflow</title>
      <link>https://abicas.github.io/SapOnMicrosoftDemos/labs/autoint/logicapps/step2/</link>
      <pubDate>Thu, 10 Mar 2022 14:52:21 -0300</pubDate>
      
      <guid>https://abicas.github.io/SapOnMicrosoftDemos/labs/autoint/logicapps/step2/</guid>
      <description>In this step we will create the Workflow on Azure Portal.
 Go to Logic Apps Click on your Logic App SAPDemo Go to Workflows and Add a new one as the parameters below:  Click on Designer and let&amp;rsquo;s start building the Workflow! As the first operation, which starts the flow, we will pick When a HTTP request is received  In order to customize the payload we expect, let&amp;rsquo;s Use a sample payload to generate schema  Sample payload: {&amp;quot;id&amp;quot;: &amp;quot;0000000728&amp;quot;}    This will generate a schema for the trigger  Now we will create our temp variable to hold the desired part of the SAP reponse.</description>
    </item>
    
    <item>
      <title>Azure Data Gateway Setup</title>
      <link>https://abicas.github.io/SapOnMicrosoftDemos/env_setup/datagwsetup/step2/</link>
      <pubDate>Wed, 09 Mar 2022 11:22:24 -0300</pubDate>
      
      <guid>https://abicas.github.io/SapOnMicrosoftDemos/env_setup/datagwsetup/step2/</guid>
      <description>In this section we will create the endpoint on Azure for the installed on-premises data gateway.
This section is a summary of the guide Install data gateway and Connect to SAP systems.
Connect to the Azure Portal and follow the steps below:
 Go to On-premises Data Gateways:  Select Add  Fill the required parameters. Make sure to Select the same region as used on the installation (East US) and Select the name of the gateway previously created that should be populated on the drop-down box.</description>
    </item>
    
    <item>
      <title>Publishing to Teams</title>
      <link>https://abicas.github.io/SapOnMicrosoftDemos/labs/autoint/virtualagents/step3/</link>
      <pubDate>Thu, 10 Mar 2022 17:25:38 -0300</pubDate>
      
      <guid>https://abicas.github.io/SapOnMicrosoftDemos/labs/autoint/virtualagents/step3/</guid>
      <description>In this section we will publish our Chatbot to Teams and test it.
On the left side of the screen go to the Publish Publish the latest version. Once the bot is public, we will add it to our org&amp;rsquo;s Teams. Click on Go to Channels and then turn on Teams Channel After the publishing and channel activations succeeds, you should see the option to Open bot directly on Teams. On Teams, Add the Bot Run the same simulations as in the test bot.</description>
    </item>
    
    <item>
      <title>Running the lab</title>
      <link>https://abicas.github.io/SapOnMicrosoftDemos/labs/autoint/logicapps/step3/</link>
      <pubDate>Thu, 10 Mar 2022 14:52:21 -0300</pubDate>
      
      <guid>https://abicas.github.io/SapOnMicrosoftDemos/labs/autoint/logicapps/step3/</guid>
      <description>In this step we will execute the Workflow created previously
Go back to Overview, Enable Debug mode (will be used in the future) and copy the Workflow URL provided We need to invoke the API, so we can use an externall tool like Postman or use the embeded Run Trigger tool.
For Postman:
 Method: POST URL: copied on the previous step Body: raw - JSON Body content: {&amp;quot;id&amp;quot;: &amp;quot;0000000728&amp;quot;} or {&amp;quot;id&amp;quot;: &amp;quot;0000001575&amp;quot;}  Note: SAP compares strings so have that in mind with leading zeroes and 10 total chars   Hit Send.</description>
    </item>
    
  </channel>
</rss>
